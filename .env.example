# An URL of the app accessible from outside (by Jira).
# For local development, consider using ngrok:
# 1. Create an ngrok account: https://dashboard.ngrok.com
# 2. Create your own static domain: https://dashboard.ngrok.com/cloud-edge/domains
# 3. Use a created domain as APP_URL (e.g., https://foo-bar-baz.ngrok-free.app).
APP_URL=
# A unique key to identify the app.
# See for more detail: https://developer.atlassian.com/cloud/jira/platform/connect-app-descriptor/
APP_KEY=com.figma.jira-add-on-dev

# A port the server should listen on.
SERVER_PORT=3000

# A Postgres host.
PG_FIGMA_FOR_JIRA_DB_HOST=localhost
# A Postgres port.
PG_FIGMA_FOR_JIRA_DB_PORT=5432
# A Postgres database name.
PG_FIGMA_FOR_JIRA_DB_SCHEMA=figma_for_jira
# A Postgres username.
PG_FIGMA_FOR_JIRA_DB_ROLE=figma_for_jira_app
# Postgres password.
# Consider adding `PG_FIGMA_FOR_JIRA_DB_PASSWORD` value to a secure secret storage for the production environment.
PG_FIGMA_FOR_JIRA_DB_PASSWORD=password
# A database URL used by Prisma ORM. Leave this as is.
# See for more detail: https://www.prisma.io/docs/guides/development-environment/environment-variables/managing-env-files-and-setting-variables
DATABASE_URL='postgresql://${PG_FIGMA_FOR_JIRA_DB_ROLE}:${PG_FIGMA_FOR_JIRA_DB_PASSWORD}@${PG_FIGMA_FOR_JIRA_DB_HOST}:${PG_FIGMA_FOR_JIRA_DB_PORT}/${PG_FIGMA_FOR_JIRA_DB_SCHEMA}'

# A base URL of the Figma web application.
FIGMA_WEB_BASE_URL=https://www.figma.com
# A base URL of Figma REST API.
# See for more detail: https://www.figma.com/developers/api
FIGMA_API_BASE_URL=https://api.figma.com
# A base URL of Figma OAuth 2.0 authorization server.
FIGMA_OAUTH2_AUTHORIZATION_SERVER_BASE_URL=https://www.figma.com
# The credentials of a registered Figma app.
# 1. Go to https://www.figma.com/developers/apps.
# 2. Create a new app. In "Callbacks", add `${APP_URL}/figma/oauth/callback` (see `APP_URL` value above).
# 3. Note the Client ID and Client Secret and fill out the corresponding env variables below.
# Consider adding `FIGMA_OAUTH2_CLIENT_SECRET` value to a secure secret storage for the production environment.
FIGMA_OAUTH2_CLIENT_ID=
FIGMA_OAUTH2_CLIENT_SECRET=
# A HS256 (HMAC with SHA-256) secret key (for signing JWT tokens used as the OAuth 2.0 `state` parameter).
# Generate a cryptographically secure random key of minimum 256 bit (e.g., using `openssl rand -hex 32`).
# Consider adding `FIGMA_OAUTH2_STATE_SECRET_KEY` value to a secure secret storage for the production environment.
FIGMA_OAUTH2_STATE_SECRET_KEY=

# A URL of the Connect public key server.
# See for more detail: https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/#validating-installation-lifecycle-requests
JIRA_CONNECT_KEY_SERVER_URL=https://connect-install-keys.atlassian.com

###############################################################
## The env variables below are required only for development ##
###############################################################

# If you do not use ngrok, skip this section.
# A ngrok authtoken.
# 1. Go to https://dashboard.ngrok.com/get-started/setup
# 2. Find your ngrok authtoken.
NGROK_AUTHTOKEN=
# An ngrok static domain. This is the same domain that is used in `APP_URL` (e.g., `foo-bar-baz.ngrok-free.app`).
# 1. Go to https://dashboard.ngrok.com/cloud-edge/domains or find the `APP_URL` value.
# 2. Find the domain name.
NGROK_DOMAIN=

